generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admin {
  id_admin         String             @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
  username         String?            @db.VarChar(64)
  password         String?            @db.VarChar(256)
  email            String?            @db.VarChar(128)
  sales            Boolean?           @default(true)
  edit             Boolean?           @default(true)
  creates          Boolean?           @default(true)
  archive          Boolean?           @default(true)
  stats            Boolean?           @default(true)
  user_details     Boolean?           @default(true)
  admin_restaurant admin_restaurant[]
}

model admin_restaurant {
  id_ar         String      @id @default(dbgenerated("uuid()")) @db.VarChar(64)
  id_admin      String?     @db.VarChar(64)
  id_restaurant String?     @db.VarChar(64)
  admin         admin?      @relation(fields: [id_admin], references: [id_admin], onDelete: NoAction, onUpdate: NoAction, map: "admin_restaurant_ibfk_1")
  restaurant    restaurant? @relation(fields: [id_restaurant], references: [id_restaurant], onDelete: NoAction, onUpdate: NoAction, map: "admin_restaurant_ibfk_2")

  @@index([id_admin], map: "id_admin")
  @@index([id_restaurant], map: "id_restaurant")
}

model business_hours {
  id_business_hours String      @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
  day               String?     @db.VarChar(32)
  open_hour         DateTime?   @db.Time(3)
  close_hour        DateTime?   @db.Time(0)
  id_restaurant     String?     @db.VarChar(64)
  restaurant        restaurant? @relation(fields: [id_restaurant], references: [id_restaurant], onDelete: NoAction, onUpdate: NoAction, map: "business_hours_ibfk_1")

  @@index([id_restaurant], map: "id_restaurant")
}

model deliver_options {
  id_deliver_opt String      @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
  delivery_price Int?
  min_order      Int?
  collection     Boolean?
  delivery_fee   Int?
  evereat_fee    Int?
  id_restaurant  String?     @db.VarChar(64)
  restaurant     restaurant? @relation(fields: [id_restaurant], references: [id_restaurant], onDelete: NoAction, onUpdate: NoAction, map: "deliver_options_ibfk_1")

  @@index([id_restaurant], map: "id_restaurant")
}

model discount {
  id_discount   String      @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
  discount      Int?
  start_date    DateTime?   @default(dbgenerated("'2023-11-20'")) @db.Date
  end_date      DateTime?   @default(dbgenerated("'2023-11-30'")) @db.Date
  with_code     Boolean?    @default(false)
  code          String?     @db.VarChar(64)
  max_users     Int?        @default(0)
  id_restaurant String?     @db.VarChar(64)
  id_dish       String?     @db.VarChar(64)
  dish          dish?       @relation(fields: [id_dish], references: [id_dish], onDelete: NoAction, onUpdate: NoAction, map: "discount_ibfk_1")
  restaurant    restaurant? @relation(fields: [id_restaurant], references: [id_restaurant], onDelete: NoAction, onUpdate: NoAction, map: "discount_ibfk_2")
  gift          gift[]

  @@index([id_dish], map: "id_dish")
  @@index([id_restaurant], map: "id_restaurant")
}

model dish {
  id_dish  String     @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
  name     String?    @db.VarChar(64)
  id_menu  String?    @db.VarChar(64)
  discount discount[]
  menu     menu?      @relation(fields: [id_menu], references: [id_menu], onDelete: NoAction, onUpdate: NoAction, map: "dish_ibfk_1")
  extra    extra[]
  variant  variant[]

  @@index([id_menu], map: "id_menu")
}

model extra {
  id_extra String  @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
  name     String? @db.VarChar(64)
  id_dish  String? @db.VarChar(64)
  dish     dish?   @relation(fields: [id_dish], references: [id_dish], onDelete: NoAction, onUpdate: NoAction, map: "extra_ibfk_1")

  @@index([id_dish], map: "id_dish")
}

model gift {
  id_gift     String    @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
  id_discount String?   @db.VarChar(64)
  discount    discount? @relation(fields: [id_discount], references: [id_discount], onDelete: NoAction, onUpdate: NoAction, map: "gift_ibfk_1")

  @@index([id_discount], map: "id_discount")
}

model menu {
  id_menu       String      @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
  id_restaurant String?     @db.VarChar(64)
  dish          dish[]
  restaurant    restaurant? @relation(fields: [id_restaurant], references: [id_restaurant], onDelete: NoAction, onUpdate: NoAction, map: "menu_ibfk_1")

  @@index([id_restaurant], map: "id_restaurant")
}

model order {
  id_order          String          @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
  date              DateTime?       @db.Date
  hour              DateTime?       @db.Time(0)
  paid              Boolean?
  id_user           String?         @db.VarChar(64)
  id_restaurant     String?         @db.VarChar(64)
  id_rider          String?         @db.VarChar(64)
  id_state          String?         @db.VarChar(64)
  id_payment_method String?         @db.VarChar(64)
  user              user?           @relation(fields: [id_user], references: [id_user], onDelete: NoAction, onUpdate: NoAction, map: "order_ibfk_1")
  restaurant        restaurant?     @relation(fields: [id_restaurant], references: [id_restaurant], onDelete: NoAction, onUpdate: NoAction, map: "order_ibfk_2")
  rider             rider?          @relation(fields: [id_rider], references: [id_rider], onDelete: NoAction, onUpdate: NoAction, map: "order_ibfk_3")
  order_state       order_state?    @relation(fields: [id_state], references: [id_state], onDelete: NoAction, onUpdate: NoAction, map: "order_ibfk_4")
  payment_method    payment_method? @relation(fields: [id_payment_method], references: [id_payment_method], onDelete: NoAction, onUpdate: NoAction, map: "order_ibfk_5")
  order_variant     order_variant[]

  @@index([id_payment_method], map: "id_payment_method")
  @@index([id_restaurant], map: "id_restaurant")
  @@index([id_rider], map: "id_rider")
  @@index([id_state], map: "id_state")
  @@index([id_user], map: "id_user")
}

model order_state {
  id_state String  @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
  state    String? @db.VarChar(256)
  order    order[]
}

model order_variant {
  id_ov      String   @id @default(dbgenerated("uuid()")) @db.VarChar(64)
  id_order   String?  @db.VarChar(64)
  id_variant String?  @db.VarChar(64)
  order      order?   @relation(fields: [id_order], references: [id_order], onDelete: NoAction, onUpdate: NoAction, map: "order_variant_ibfk_1")
  variant    variant? @relation(fields: [id_variant], references: [id_variant], onDelete: NoAction, onUpdate: NoAction, map: "order_variant_ibfk_2")

  @@index([id_order], map: "id_order")
  @@index([id_variant], map: "id_variant")
}

model payment_method {
  id_payment_method String  @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
  payment_method    String? @db.VarChar(256)
  order             order[]
}

model restaurant {
  id_restaurant    String             @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
  business_name    String?            @db.VarChar(1024)
  street_number    Int?
  route            String?            @db.VarChar(256)
  city             String?            @db.VarChar(256)
  state            String?            @db.VarChar(256)
  gmap_latitude    String?            @db.VarChar(256)
  gmap_longitude   String?            @db.VarChar(256)
  email            String?            @db.VarChar(128)
  telephone        String?            @db.VarChar(64)
  logo             String?            @db.VarChar(256)
  archived         Boolean?
  admin_restaurant admin_restaurant[]
  business_hours   business_hours[]
  deliver_options  deliver_options[]
  discount         discount[]
  menu             menu[]
  order            order[]
  restaurant_photo restaurant_photo[]
  reviews          reviews[]
  rider            rider[]
}

model restaurant_photo {
  id_foto       String      @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
  type          String?     @db.VarChar(64)
  path          String?     @db.VarChar(256)
  id_restaurant String?     @db.VarChar(64)
  id_variant    String?     @db.VarChar(64)
  restaurant    restaurant? @relation(fields: [id_restaurant], references: [id_restaurant], onDelete: NoAction, onUpdate: NoAction, map: "restaurant_photo_ibfk_1")
  variant       variant?    @relation(fields: [id_variant], references: [id_variant], onDelete: NoAction, onUpdate: NoAction, map: "restaurant_photo_ibfk_2")

  @@index([id_restaurant], map: "id_restaurant")
  @@index([id_variant], map: "id_variant")
}

model reviews {
  id_review     String      @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
  stars         Int?
  date          DateTime?   @db.Date()
  text          String?     @db.VarChar(2048)
  id_user       String?     @db.VarChar(64)
  id_restaurant String?     @db.VarChar(64)
  user          user?       @relation(fields: [id_user], references: [id_user], onDelete: NoAction, onUpdate: NoAction, map: "reviews_ibfk_1")
  restaurant    restaurant? @relation(fields: [id_restaurant], references: [id_restaurant], onDelete: NoAction, onUpdate: NoAction, map: "reviews_ibfk_2")

  @@index([id_restaurant], map: "id_restaurant")
  @@index([id_user], map: "id_user")
}

model rider {
  id_rider       String      @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
  name           String?     @db.VarChar(64)
  surname        String?     @db.VarChar(64)
  email          String?     @db.VarChar(128)
  password       String?     @db.VarChar(256)
  street_number  Int?
  route          String?     @db.VarChar(256)
  city           String?     @db.VarChar(256)
  state          String?     @db.VarChar(256)
  mean_transport String?     @db.VarChar(64)
  id_restaurant  String?     @db.VarChar(64)
  order          order[]
  restaurant     restaurant? @relation(fields: [id_restaurant], references: [id_restaurant], onDelete: NoAction, onUpdate: NoAction, map: "rider_ibfk_1")

  @@index([id_restaurant], map: "id_restaurant")
}

model user {
  id_user       String    @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
  name          String?   @db.VarChar(64)
  surname       String?   @db.VarChar(64)
  email         String?   @db.VarChar(128)
  telephone     String?   @db.VarChar(64)
  password      String?   @db.VarChar(256)
  street_number Int?
  route         String?   @db.VarChar(256)
  city          String?   @db.VarChar(256)
  state         String?   @db.VarChar(256)
  order         order[]
  reviews       reviews[]
}

model variant {
  id_variant       String             @id @default(dbgenerated("(uuid())")) @db.VarChar(64)
  name             String?            @db.VarChar(64)
  img              String?            @db.VarChar(64)
  price            Int?               @default(599)
  id_dish          String?            @db.VarChar(64)
  order_variant    order_variant[]
  restaurant_photo restaurant_photo[]
  dish             dish?              @relation(fields: [id_dish], references: [id_dish], onDelete: NoAction, onUpdate: NoAction, map: "variant_ibfk_1")

  @@index([id_dish], map: "id_dish")
}